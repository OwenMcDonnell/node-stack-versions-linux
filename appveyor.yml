init:
- appveyor version
- ps: Update-AppveyorBuild -Message "Image '$env:APPVEYOR_BUILD_WORKER_IMAGE'@'$env:APPVEYOR_BUILD_WORKER_CLOUD' cloud. $env:APPVEYOR_REPO_COMMIT_MESSAGE"
- sh: echo $APPVEYOR_BUILD_WORKER_CLOUD
- sh: echo $APPVEYOR_BUILD_WORKER_IMAGE
- sh: |
    # Only use colors if connected to a terminal
    if [ -t 1 ]; then
      RED=$(printf '\033[31m')
      GREEN=$(printf '\033[32m')
      YELLOW=$(printf '\033[33m')
      BLUE=$(printf '\033[34m')
      BOLD=$(printf '\033[1m')
      RESET=$(printf '\033[m')
      NC=$(printf '\033[m')
    else
      RED=""
      GREEN=""
      YELLOW=""
      BLUE=""
      BOLD=""
      RESET=""
      NC=""
    fi
    
environment:
  expected_default_node: v12.
  expected_lts_node: v12.
  expected_current_node: v12.
  expected_stable_node: v14.


test_script:
    - sh: nvm --version
    - sh: |
        echo Current
        nvm use current
        nv=$(node --version)
        echo $nv
        if [[ $nv =~ ^$expected_current_node ]]; then
            echo "${GREEN}Current Node.js version is Correct${NC}"
        else
            echo "${RED}Current Node.js version should be '${expected_current_node}.x'${NC}"
            exit 1
        fi

    - sh: |
        echo Default
        nv=$(node --version)
        echo $nv
        if [[ $nv =~ ^$expected_default_node ]]; then
            echo "${GREEN}Default Node.js version is Correct${NC}"
        else
            echo "${RED}Default Node.js version should be '${expected_default_node}.x'${NC}"
            exit 1
        fi

    - sh: |
        echo LTS
        nvm use lts/*
        nv=$(node --version)
        echo $nv
        if [[ $nv =~ ^$expected_lts_node ]]; then
            echo "${GREEN}LTS Node.js version is Correct${NC}"
        else
            echo "${RED}LTS Node.js version should be '${expected_lts_node}.x'${NC}"
            exit 1
        fi

    - sh: |
        echo Stable
        nvm use stable
        nv=$(node --version)
        echo $nv
        if [[ $nv =~ ^$expected_stable_node ]]; then
            echo "${GREEN}Stable Node.js version is Correct${NC}"
        else
            echo "${RED}Stable Node.js version should be '${expected_stable_node}.x'${NC}"
            exit 1
        fi

    - sh: |
        for version in "4" "5" "6" "7" "8" "9" "10" "11" "12" "13" "14"; do
            echo "Latest ${version}.x:"
            nvm use $version
            node --version
        done

    - sh: |
        versions=( "14.4.0" "13.14.0" "12.16.3" "11.15.0" "10.20.1" "9.11.2" "8.17.0" "7.10.1" "6.17.1" "5.12.0" "4.9.1" )
        for version in ${versions[@]}; do
            if ! nvm use ${version}; then 
               echo "${RED} nvm cant use version '${version}' ${NC}"
               exit 1
            fi
            node --version >${APPVEYOR_BUILD_FOLDER}/${version}.txt
            if [ $(node --version) = "v${version}" ]; then
                echo "${GREEN}Correct version ${version}${NC}"
            else
                exit 1
            fi
        done

artifacts:
  - path: '**\*.txt'

build: off
