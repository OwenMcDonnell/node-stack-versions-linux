init:
- appveyor version
- sh: echo $APPVEYOR_BUILD_WORKER_CLOUD
- sh: echo $APPVEYOR_BUILD_WORKER_IMAGE

environment:
  expected_default_node: v4.
  expected_lts_node: v8.
  expected_current_node: v4.
  expected_stable_node: v9.


test_script:
    - sh: |
        echo Current
        nvm use current
        nv=$(node --version)
        echo $nv
        if [[ $nv =~ ^$expected_current_node ]]; then
            echo "Current Node.js version is Correct"
        else
            echo "Current Node.js version should be ${expected_current_node}.x"
            exit 1
        fi

    - sh: |
        echo Default
        nv=$(node --version)
        echo $nv
        if [[ $nv =~ ^$expected_default_node ]]; then
            echo "Default Node.js version is Correct"
        else
            echo "Default Node.js version should be ${expected_default_node}.x"
            exit 1
        fi

    - sh: |
        echo LTS
        nvm use lts/*
        nv=$(node --version)
        echo $nv
        if [[ $nv =~ ^$expected_lts_node ]]; then
            echo "LTS Node.js version is Correct"
        else
            echo "LTS Node.js version should be ${expected_lts_node}.x"
            exit 1
        fi

    - sh: |
        echo Stable
        nvm use stable
        nv=$(node --version)
        echo $nv
        if [[ $nv =~ ^$expected_stable_node ]]; then
            echo "Stable Node.js version is Correct"
        else
            echo "Stable Node.js version should be ${expected_stable_node}.x"
            exit 1
        fi

    - sh: |
        for version in "4" "5" "6" "7" "8" "9"; do
            echo "Latest ${version}.x:"
            nvm use $version
            node --version
        done

    - sh: |
        versions=( "9.11.1" "8.11.2" "7.10.1" "6.14.2" "5.12.0" "4.9.1" )
        for version in ${versions[@]}; do
            nvm use ${version}
            node --version >${APPVEYOR_BUILD_FOLDER}/${version}.txt
            if [ $(node --version) = "v${version}" ]; then
                echo "Correct version ${version}"
            else
                return 1
            fi
        done

artifacts:
  - path: '**\*.txt'

build: off
